You are my senior engineer. Extend the app using ONLY these services:
- OpenAI (GPT-4o-mini)
- Alpha Vantage (equities/ETFs/FX + News & Sentiment + Earnings + Sector Performance)
- CoinGecko (crypto)

========================================
ENV
========================================
Add to .env.example:
ALPHAVANTAGE_KEY=
COINGECKO_BASE=https://api.coingecko.com/api/v3

========================================
SERVER: SDK wrappers (apps/web/src/server/alpha.ts & coingecko.ts)
========================================
alpha.ts:
- getIntraday(symbol, interval="5min", output="compact")
- getDailyAdjusted(symbol)
- getFxIntraday(pair="EUR/USD", interval="5min")
- getNewsAndSentiment({ tickers?: string[], topics?: string[], sort?: "LATEST", limit?: number })
- getEarnings(symbol)
- getSectorPerformance()  // returns { "Rank A: Real-Time Performance": {XLK:.., XLE:..} mapped }

All methods include:
- rate-limit queue (5 req/min window)
- in-memory cache (TTL 10–15 min) with key-based hashing
- error-safe fallbacks (empty arrays)

coingecko.ts:
- getPriceSimple(ids[])  // { id: { usd, usd_24h_change } }
- getMarketChart(id, days)  // [{ ts, price }]
- search(query)  // map id↔symbol

========================================
DB (Prisma)
========================================
Ensure FocusAsset table exists (max 5 per portfolio). If not, create:

model FocusAsset {
  id          String   @id @default(cuid())
  portfolioId String
  symbol      String
  assetType   String
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  @@unique([portfolioId, symbol])
}

Run migration: phase4_focus_assets

========================================
APIs
========================================
1) AI Sentiment Index
GET /api/sentiment/index
- Inputs from AV:
  * pct(SPY today), pct(QQQ today), pct(IWM today)
  * pct(HYG today) - pct(LQD today) => credit spread proxy
  * realizedVol10 = stdev( last 10 daily returns of SPY )
- Map to subscores 0–100 (rules):
  * Risk appetite = normalize(avg(SPY,QQQ,IWM))
  * Credit = normalize(HYG-LQD)
  * Volatility = inverse normalize(realizedVol10)
- indexScore = 0.4*risk + 0.25*credit + 0.35*volInverse
- Return { score, regime: "Risk-On|Neutral|Risk-Off", drivers:[{label,value,contribution,note}], as_of }
POST /api/sentiment/explain { indexPayload, note? } -> OpenAI narrative (4 bullets + one‑liner)

2) Headlines (Alpha Vantage News)
GET /api/headlines/timeline?tickers=AAPL,MSFT&limit=50
- Use AV News & Sentiment (topic "financial_markets")
- Normalize: [{id, published, title, source, url, symbols[], summary}]
POST /api/headlines/impact { title, summary?, symbols[] } -> OpenAI outputs { whyThisMatters[], impacts[], as_of }

3) Selected Assets (max 5)
GET /api/focus-assets?portfolioId=...
POST /api/focus-assets { portfolioId, symbol, assetType, order }
DELETE /api/focus-assets/:id
- Enforce server-side: if count >= 5 return 400.

4) Asset Overview (multi-timeframe stance)
GET /api/asset/overview?symbol=TSLA&assetType=equity&frames=1h,1d,1w,1m,3m,1y
- For equities/FX: AV; for crypto: CG
- For each frame:
  * compute changePct, MAfast vs MAslow (e.g., 10 vs 30 for 1D; 20 vs 50 for longer), slope sign
  * stance rules: Bullish if changePct>1% & MAfast>MAslow & slope>0; Bearish if inverse; else Neutral
  * confidence 0.4–0.9 based on agreement count
- Return { symbol,name,assetType,price,change24h,frames:{...}, as_of }
POST /api/asset/overview/explain { overviewPayload } -> OpenAI headline + 2–3 bullets

5) Market Recap (daily)
GET /api/recap/daily
- indices: SPY, QQQ, DIA, IWM from AV (today pct)
- sectors: AV getSectorPerformance() → map to XLK…XLU
- movers: from FocusAssets; compute today’s top 3 up/down via AV/CG
- Return { indices, sectors, movers:{gainers,losers}, as_of }
POST /api/recap/summarize { recapPayload } -> OpenAI 4–6 bullet brief + "What to watch"

========================================
UI
========================================
- Dashboard: replace old Sentiment with new Index score + regime chips; link to /modules/sentiment for full view.
- Headlines: show vertical timeline (time ago, source); “Analyze” icon per item -> impact chips.
- Focus Assets picker (modal) enforces max 5; chips shown on Dashboard + AI Insights.
- Asset Overview page: tabs per Focus Asset; timeframe buttons (1H/1D/1W/1M/3M/1Y) with stance pill + confidence bar + mini notes; AI summary on right.
- Recap page: sector bar chart, indices tiles, top movers list, AI brief; as_of badges everywhere.

========================================
GUARDS
========================================
- Respect AV rate limits (queue + cache); show “stale” label if cached > 1h.
- Always include `as_of` and `source` in API responses.
- OpenAI prompts: “Use ONLY provided context; if missing say ‘not in context’.”

========================================
ACCEPTANCE
========================================
- Sentiment Index returns a score/regime and AI bullets using only AV/CG data.
- Headlines timeline renders from AV News; Analyze returns symbol impacts.
- User can select up to 5 Focus Assets; attempting 6th is blocked.
- Asset Overview shows stances for multiple frames and AI summary.
- Market Recap shows sector/indices from AV and top movers from Focus Assets.
- All data shows `as_of` timestamps; rate limits handled gracefully.
